// <auto-generated />
using System;
using LotteryAPI.Data.EFLottery;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LotteryAPI.Migrations
{
    [DbContext(typeof(EFDataContext))]
    partial class EFDataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.2");

            modelBuilder.Entity("LoteriasAPI.Entities.DrawnNumber", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<int>("DrawnOrder")
                        .HasColumnType("INTEGER");

                    b.Property<Guid?>("GameId")
                        .HasColumnType("TEXT");

                    b.Property<int>("Number")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("GameId");

                    b.ToTable("DrawNumbers");
                });

            modelBuilder.Entity("LoteriasAPI.Entities.Game", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<float>("Amount")
                        .HasColumnType("REAL");

                    b.Property<int>("GameNumber")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("GameRouteId")
                        .HasColumnType("TEXT");

                    b.Property<bool>("HasWinner")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("ResultDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("SpecialGame")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("GameRouteId");

                    b.ToTable("Games");
                });

            modelBuilder.Entity("LotteryAPI.Lottery.Domain.Entities.Bet", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ConfigId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ConfigId");

                    b.ToTable("Bets");
                });

            modelBuilder.Entity("LotteryAPI.Lottery.Domain.Entities.BetConfig", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<int>("AmountOfNumbers")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("GameRouteId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("GameRouteId");

                    b.ToTable("BetConfigs");
                });

            modelBuilder.Entity("LotteryAPI.Lottery.Domain.Entities.BetNumber", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("BetId")
                        .HasColumnType("TEXT");

                    b.Property<int>("Number")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("BetId");

                    b.ToTable("BetNumbers");
                });

            modelBuilder.Entity("LotteryAPI.Lottery.Domain.Entities.GameRoute", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<int>("AmountOfDrawnNumbers")
                        .HasColumnType("INTEGER");

                    b.Property<int>("AmountOfNumbersToBet")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("EndNumber")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Route")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("StartNumber")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Routes");
                });

            modelBuilder.Entity("LoteriasAPI.Entities.DrawnNumber", b =>
                {
                    b.HasOne("LoteriasAPI.Entities.Game", null)
                        .WithMany("Numbers")
                        .HasForeignKey("GameId");
                });

            modelBuilder.Entity("LoteriasAPI.Entities.Game", b =>
                {
                    b.HasOne("LotteryAPI.Lottery.Domain.Entities.GameRoute", "GameRoute")
                        .WithMany()
                        .HasForeignKey("GameRouteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GameRoute");
                });

            modelBuilder.Entity("LotteryAPI.Lottery.Domain.Entities.Bet", b =>
                {
                    b.HasOne("LotteryAPI.Lottery.Domain.Entities.BetConfig", "Config")
                        .WithMany()
                        .HasForeignKey("ConfigId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Config");
                });

            modelBuilder.Entity("LotteryAPI.Lottery.Domain.Entities.BetConfig", b =>
                {
                    b.HasOne("LotteryAPI.Lottery.Domain.Entities.GameRoute", "GameRoute")
                        .WithMany()
                        .HasForeignKey("GameRouteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GameRoute");
                });

            modelBuilder.Entity("LotteryAPI.Lottery.Domain.Entities.BetNumber", b =>
                {
                    b.HasOne("LotteryAPI.Lottery.Domain.Entities.Bet", null)
                        .WithMany("Numbers")
                        .HasForeignKey("BetId");
                });

            modelBuilder.Entity("LoteriasAPI.Entities.Game", b =>
                {
                    b.Navigation("Numbers");
                });

            modelBuilder.Entity("LotteryAPI.Lottery.Domain.Entities.Bet", b =>
                {
                    b.Navigation("Numbers");
                });
#pragma warning restore 612, 618
        }
    }
}
